#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ JWT —Ç–æ–∫–µ–Ω–æ–≤
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_system():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´")
    print("=" * 40)
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fio = "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á"
    password = "test123"
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    # 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print("\n2Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    user_data = {"fio": fio, "password": password}
    
    try:
        response = requests.post(f"{BASE_URL}/auth/login", json=user_data)
        if response.status_code == 200:
            user_info = response.json()
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {user_info['fio']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print("–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑: python add_users.py")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞...")
    chat_data = {"title": "–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç"}
    
    try:
        response = requests.post(
            f"{BASE_URL}/chats",
            json=chat_data,
            data={"fio": fio, "password": password}
        )
        if response.status_code == 200:
            chat = response.json()
            chat_id = chat["id"]
            print(f"‚úÖ –ß–∞—Ç —Å–æ–∑–¥–∞–Ω (ID: {chat_id})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    message_data = {
        "chat_id": chat_id,
        "messages": [{"by": "user", "message": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"}]
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/question",
            json=message_data,
            data={"fio": fio, "password": password}
        )
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            print(f"   –û—Ç–≤–µ—Ç: {result['answer'][:100]}...")
            print(f"   –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: {result['classification']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...")
    try:
        response = requests.post(
            f"{BASE_URL}/chats/{chat_id}/messages",
            data={"fio": fio, "password": password}
        )
        if response.status_code == 200:
            messages = response.json()
            print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–∞ ({len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π)")
            for i, msg in enumerate(messages):
                print(f"   {i+1}. {msg['by']}: {msg['message'][:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ JWT —Ç–æ–∫–µ–Ω–æ–≤!")

if __name__ == "__main__":
    test_system()
